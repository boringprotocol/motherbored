import { useState, useEffect } from 'react';

const TEXTS = [
  'Ethereum Mainnet',
  'Ethereum Testnet (ROP, RIN, GOR, KOV)',
  'Expanse Network',
  'Ethereum Classic',
  'Ubiq Network',
  'Metadium Mainnet / Testnet',
  'ThaiChain',
  'ELA-ETH Sidechain',
  'RSK Network Mainnet / Testnet',
  'GoodData',
  'Telos EVM Mainnet',
  'Telos EVM Testnet',
  'XinFin',
  'CoinEx Smart Chain',
  'Zyx Mainnet',
  'Binance Smart Chain',
  'Ontology Mainnet',
  'EOS Mainnet',
  'Ellaism',
  'OKExChain Mainnet / Testnet',
  'Optimistic Ethereum',
  'SoterOne Mainnet',
  'GateChain',
  'GeneChain',
  'PrimusChain',
  'TomoChain (TOMO)',
  'xDAI Chain (xDAI/STAKE)',
  'Velas EVM Mainnet',
  'ThunderCore',
  'EtherLite Chain',
  'Huobi ECO Chain',
  'Polygon Mainnet (Matic Network)',
  'Lightstreams Mainnet / Testnet',
  'BitTorrent Chain',
  'Arbitrum One',
  'Permission',
  'Energy Web Chain',
  'Fantom Opera',
  'Boba Network',
  'KCC Mainnet / Testnet',
  'Shiden',
  'Theta Mainnet / Testnet',
  'PulseChain Mainnet',
  'Rupaya',
  'Tao Network',
  'cheapETH',
  'Callisto Mainnet / Testnet',
  'Acala Network',
  'Wanchain Mainnet / Testnet',
  'Ambros Chain',
  'PulseChain',
  'Lucky Network',
  'MathChain',
  'Popcateum Mainnet',
  'HALO Mainnet',
  'Moonbeam',
  'Moonriver',
  'Moonrock',
  'Moonshadow',
  'Catecoin Chain',
  'Teslafunds',
  'EtherGem',
  'Edgeware',
  'Ecoball',
  'IoTeX Network',
  'SyscoinEraSwap',
  'Smart Bitcoin Cash',
  'MetaDot',
  'Ethersocial Network',
  'Celo Mainnet',
  'Athereum',
  'Avalanche Mainnet / Fuji Testnet',
  'Polyjuice',
  'QuarkChain Mainnet / Devnet',
  'Akroma',
  'ARTIS',
  'Polis Mainnet / Testnet',
  'Etho Protocol',
  'Xerom',
  'Auxilium Network',
  'Aquachain',
  'Joys Digital Mainnet',
  'Neon EVM',
  'OneLedger',
  'IPOS Network',
  'Aurora MainNet / Testnet / BetaNet',
  'Harmony Mainnet / Testnet',
  'Pirl',
  'Palm Mainnet / Testnet',
  'xDAI Chain',
  'Newton',
  'Sakura',
  'Clover'
];

const TextCycle = () => {
  const [index, setIndex] = useState(0);

  useEffect(() => {
    const interval = setInterval(() => {
      setIndex(index => (index + 1) % TEXTS.length);
    }, 300);

    return () => clearInterval(interval);
  }, []);

  return <span className="text-xs">{TEXTS[index]}</span>;
};

export default TextCycle;
